
@article{hussein_original_2024,
	title = {Original {Research} {Article} {TinyML}: {Adopting} tiny machine learning in smart cities},
	volume = {7},
	shorttitle = {Original {Research} {Article} {TinyML}},
	doi = {10.32629/jai.v7i4.1186},
	abstract = {div{\textgreater}
Since Tiny machine learning (TinyML) is a quickly evolving subject, it is crucial that internet of things (IoT) devices be able to communicate with one another for the sake of stability and future development. TinyML is a rapidly growing subfield at the intersection of computer science, software engineering, and machine learning. Building deep learning (DL) networks that are a few hundred KBs in size has been the focus of recent research in this area. Deploying TinyML into small devices makes them smart. Reduced computation, power usage, and response time are just a few of the many advantages of TinyML. In this work, we provide an introduction to TinyML and demonstrate its benefits and architecture. Then, we investigate the meaning of quantization as a standard compression method for TinyML-related applications. There are two methods used to obtain the quantized weights of the deep learning models are quantization-aware training (QAT) and post-training quantization (PTQ), we described them in details. Next, TinyML-based solutions to improve the role of IoT devices in Smart Cities are highlighted as: lightweight training of deep learning models, inference of lightweight deep learning models in IoT devices, low power consumption, and inference of deep learning models in restricted resources of IoT devices. Finally, presenting some use cases for TinyML studies, with these studies applied to several cases in a variety of fields. To the best of the author’s knowledge, few studies have investigated TinyML as it is an emerging field.},
	journal = {Journal of Autonomous Intelligence},
	author = {Hussein, Dina and Ibrahim, Dina and Alajlan, Norah},
	month = jan,
	year = {2024},
	pages = {1--14},
}

@misc{de_prado_robustifying_2020,
	title = {Robustifying the {Deployment} of {tinyML} {Models} for {Autonomous} mini-vehicles},
	url = {https://arxiv.org/abs/2007.00302v2},
	abstract = {Standard-size autonomous navigation vehicles have rapidly improved thanks to the breakthroughs of deep learning. However, scaling autonomous driving to low-power systems deployed on dynamic environments poses several challenges that prevent their adoption. To address them, we propose a closed-loop learning flow for autonomous driving mini-vehicles that includes the target environment in-the-loop. We leverage a family of compact and high-throughput tinyCNNs to control the mini-vehicle, which learn in the target environment by imitating a computer vision algorithm, i.e., the expert. Thus, the tinyCNNs, having only access to an on-board fast-rate linear camera, gain robustness to lighting conditions and improve over time. Further, we leverage GAP8, a parallel ultra-low-power RISC-V SoC, to meet the inference requirements. When running the family of CNNs, our GAP8's solution outperforms any other implementation on the STM32L4 and NXP k64f (Cortex-M4), reducing the latency by over 13x and the energy consummation by 92\%.},
	language = {en},
	urldate = {2024-10-21},
	journal = {arXiv.org},
	author = {de Prado, Miguel and Rusci, Manuele and Donze, Romain and Capotondi, Alessandro and Monnerat, Serge and And, Luca Benini and Pazos, Nuria},
	month = jul,
	year = {2020},
	doi = {10.1109/ISCAS51556.2021.9401154},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/XITCSUVB/de Prado et al. - 2020 - Robustifying the Deployment of tinyML Models for Autonomous mini-vehicles.pdf:application/pdf},
}

@article{huang_weight-quantized_2022,
	title = {Weight-{Quantized} {SqueezeNet} for {Resource}-{Constrained} {Robot} {Vacuums} for {Indoor} {Obstacle} {Classification}},
	volume = {3},
	doi = {10.3390/ai3010011},
	abstract = {With the rapid development of artificial intelligence (AI) theory, particularly deep learning neural networks, robot vacuums equipped with AI power can automatically clean indoor floors by using intelligent programming and vacuuming services. To date, several deep AI models have been proposed to distinguish indoor objects between cleanable litter and noncleanable hazardous obstacles. Unfortunately, these existing deep AI models focus entirely on the accuracy enhancement of object classification, and little effort has been made to minimize the memory size and implementation cost of AI models. As a result, these existing deep AI models require far more memory space than a typical robot vacuum can provide. To address this shortcoming, this paper aims to study and find an efficient deep AI model that can achieve a good balance between classification accuracy and memory usage (i.e., implementation cost). In this work, we propose a weight-quantized SqueezeNet model for robot vacuums. This model can classify indoor cleanable litters from noncleanable hazardous obstacles based on the image or video captures from robot vacuums. Furthermore, we collect videos or pictures captured by built-in cameras of robot vacuums and use them to construct a diverse dataset. The dataset contains 20,000 images with a ground-view perspective of dining rooms, kitchens and living rooms for various houses under different lighting conditions. Experimental results show that the proposed deep AI model can achieve comparable object classification accuracy of around 93\% while reducing memory usage by at least 22.5 times. More importantly, the memory footprint required by our AI model is only 0.8 MB, indicating that this model can run smoothly on resource-constrained robot vacuums, where low-end processors or microcontrollers are dedicated to running AI algorithms.},
	journal = {AI},
	author = {Huang, Qian},
	month = mar,
	year = {2022},
	pages = {180--193},
	file = {Full Text:/Users/I747320/Zotero/storage/68UT93WR/Huang - 2022 - Weight-Quantized SqueezeNet for Resource-Constrained Robot Vacuums for Indoor Obstacle Classificatio.pdf:application/pdf},
}

@misc{paul_rethinking_2021,
	title = {Rethinking {Generalization} in {American} {Sign} {Language} {Prediction} for {Edge} {Devices} with {Extremely} {Low} {Memory} {Footprint}},
	url = {http://arxiv.org/abs/2011.13741},
	doi = {10.48550/arXiv.2011.13741},
	abstract = {Due to the boom in technical compute in the last few years, the world has seen massive advances in artificially intelligent systems solving diverse real-world problems. But a major roadblock in the ubiquitous acceptance of these models is their enormous computational complexity and memory footprint. Hence efficient architectures and training techniques are required for deployment on extremely low resource inference endpoints. This paper proposes an architecture for detection of alphabets in American Sign Language on an ARM Cortex-M7 microcontroller having just 496 KB of framebuffer RAM. Leveraging parameter quantization is a common technique that might cause varying drops in test accuracy. This paper proposes using interpolation as augmentation amongst other techniques as an efficient method of reducing this drop, which also helps the model generalize well to previously unseen noisy data. The proposed model is about 185 KB post-quantization and inference speed is 20 frames per second.},
	urldate = {2024-10-21},
	publisher = {arXiv},
	author = {Paul, Aditya Jyoti and Mohan, Puranjay and Sehgal, Stuti},
	month = feb,
	year = {2021},
	note = {arXiv:2011.13741},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Computation and Language, Computer Science - Computer Vision and Pattern Recognition, Computer Science - Human-Computer Interaction, Computer Science - Machine Learning},
	file = {Preprint PDF:/Users/I747320/Zotero/storage/9MMMHGXS/Paul et al. - 2021 - Rethinking Generalization in American Sign Language Prediction for Edge Devices with Extremely Low M.pdf:application/pdf;Snapshot:/Users/I747320/Zotero/storage/W28JE6XX/2011.html:text/html},
}

@inproceedings{roshan_adaptive_2021,
	title = {Adaptive {Traffic} {Control} {With} {TinyML}},
	url = {https://ieeexplore.ieee.org/document/9419472},
	doi = {10.1109/WiSPNET51692.2021.9419472},
	abstract = {Automatic traffic scheduling can improve the efficiency of the traffic system by decreasing significant delays and easing congestion. This paper introduces a machine learning (ML) based algorithm to automate the traffic scheduling based on the density of vehicles waiting, without any human intervention. Presently, the traffic signal timers are preset which is unreasonable for a stochastic process like vehicular traffic. The proposed methodology detects vehicles with piezoelectric sensors embedded across each lane. The two-point time ratio method is utilized to identify the vehicles using the sensor's data and the vehicles are classified based on their pick-up speed. Further, a TinyML based model is proposed to predict the green signal timings.},
	urldate = {2024-10-21},
	booktitle = {2021 {Sixth} {International} {Conference} on {Wireless} {Communications}, {Signal} {Processing} and {Networking} ({WiSPNET})},
	author = {Roshan, A. Navaas and Gokulapriyan, B. and Siddarth, C. and Kokil, Priyanka},
	month = mar,
	year = {2021},
	keywords = {Adaptive Traffic Control, Machine Learning, Microcontroller, Predictive models, Scheduling, Sensors, Signal processing, Signal processing algorithms, Stochastic processes, TinyML, Traffic control, Wireless communication},
	pages = {451--455},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/DEIMFY27/Roshan et al. - 2021 - Adaptive Traffic Control With TinyML.pdf:application/pdf;IEEE Xplore Abstract Record:/Users/I747320/Zotero/storage/HNZ94WD2/9419472.html:text/html},
}

@inproceedings{ren_synergy_2021,
	address = {New York, NY, USA},
	series = {{DEBS} '21},
	title = {The synergy of complex event processing and tiny machine learning in industrial {IoT}},
	isbn = {978-1-4503-8555-8},
	url = {https://dl.acm.org/doi/10.1145/3465480.3466928},
	doi = {10.1145/3465480.3466928},
	abstract = {Focusing on comprehensive networking, the Industrial Internet-of-Things (IIoT) facilitates efficiency and robustness in factory operations. Various intelligent sensors play a central role, as they generate a vast amount of real-time data that can provide insights into manufacturing. Complex event processing (CEP) and machine learning (ML) have been developed actively in the last years in IIoT to identify patterns in heterogeneous data streams and fuse raw data into tangible facts. In a traditional compute-centric paradigm, the raw field data are continuously sent to the cloud and processed centrally. As IIoT devices become increasingly pervasive, concerns are raised since transmitting such an amount of data is energy-intensive, vulnerable to be intercepted, and subjected to high latency. Decentralized on-device ML and CEP provide a solution where data is processed primarily on edge devices. Thus communications can be minimized. However, this is no mean feat because most IIoT edge devices are resource-constrained with low power consumption. This paper proposes a framework that exploits ML and CEP's synergy at the edge in distributed sensor networks. By leveraging tiny ML and μCEP, we now shift the computation from the cloud to the resource-constrained IIoT devices and allow users to adapt on-device ML models and CEP reasoning rules flexibly on the fly. Lastly, we demonstrate the proposed solution and show its effectiveness and feasibility using an industrial use case of machine safety monitoring.},
	urldate = {2024-10-21},
	booktitle = {Proceedings of the 15th {ACM} {International} {Conference} on {Distributed} and {Event}-based {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Ren, Haoyu and Anicic, Darko and Runkler, Thomas A.},
	month = jun,
	year = {2021},
	pages = {126--135},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/ID7Q4UE9/Ren et al. - 2021 - The synergy of complex event processing and tiny machine learning in industrial IoT.pdf:application/pdf},
}

@article{sanchez-iborra_tinyml-enabled_2020,
	title = {{TinyML}-{Enabled} {Frugal} {Smart} {Objects}: {Challenges} and {Opportunities}},
	volume = {20},
	issn = {1558-0830},
	shorttitle = {{TinyML}-{Enabled} {Frugal} {Smart} {Objects}},
	url = {https://ieeexplore.ieee.org/document/9166461},
	doi = {10.1109/MCAS.2020.3005467},
	abstract = {The TinyML paradigm proposes to integrate Machine Learning (ML)-based mechanisms within small objects powered by Microcontroller Units (MCUs). This paves the way for the development of novel applications and services that do not need the omnipresent processing support from the cloud, which is power consuming and involves data security and privacy risks. In this work, a comprehensive review of the novel TinyML ecosystem is provided. The related challenges and opportunities are identified and the potential services that will be enabled by the development of truly smart frugal objects are discussed. As a main contribution of this paper, a detailed survey of the available TinyML frameworks for integrating ML algorithms within MCUs is provided. Besides, aiming at illustrating the given discussion, a real case study is presented. Concretely, we propose a multi-Radio Access Network (RAT) architecture for smart frugal objects. The issue of selecting the most adequate communication interface for sending sporadic messages considering both the status of the device and the characteristics of the data to be sent is addressed. To this end, several TinyML frameworks are evaluated and the performances of a number of ML algorithms embedded in an Arduino Uno board are analyzed. The attained results reveal the validity of the TinyML approach, which successfully enables the integration of techniques such as Neural Networks (NNs), Support Vector Machine (SVM), decision trees, or Random Forest (RF) in frugal objects with constrained hardware resources. The outcomes also show promising results in terms of algorithm's accuracy and computation performance.},
	number = {3},
	urldate = {2024-10-21},
	journal = {IEEE Circuits and Systems Magazine},
	author = {Sanchez-Iborra, Ramon and Skarmeta, Antonio F.},
	year = {2020},
	note = {Conference Name: IEEE Circuits and Systems Magazine},
	keywords = {Circuits and systems, Data privacy, Data security, Ecosystems, Energy efficiency, Machine learning, Memory management, Microcontrollers, Object recognition, Task analysis},
	pages = {4--18},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/TPY3E3AW/Sanchez-Iborra and Skarmeta - 2020 - TinyML-Enabled Frugal Smart Objects Challenges and Opportunities.pdf:application/pdf;IEEE Xplore Abstract Record:/Users/I747320/Zotero/storage/JML6LTGN/9166461.html:text/html},
}

@article{signoretti_evolving_2021,
	title = {An {Evolving} {TinyML} {Compression} {Algorithm} for {IoT} {Environments} {Based} on {Data} {Eccentricity}},
	volume = {21},
	issn = {1424-8220},
	doi = {10.3390/s21124153},
	abstract = {Currently, the applications of the Internet of Things (IoT) generate a large amount of sensor data at a very high pace, making it a challenge to collect and store the data. This scenario brings about the need for effective data compression algorithms to make the data manageable among tiny and battery-powered devices and, more importantly, shareable across the network. Additionally, considering that, very often, wireless communications (e.g., low-power wide-area networks) are adopted to connect field devices, user payload compression can also provide benefits derived from better spectrum usage, which in turn can result in advantages for high-density application scenarios. As a result of this increase in the number of connected devices, a new concept has emerged, called TinyML. It enables the use of machine learning on tiny, computationally restrained devices. This allows intelligent devices to analyze and interpret data locally and in real time. Therefore, this work presents a new data compression solution (algorithm) for the IoT that leverages the TinyML perspective. The new approach is called the Tiny Anomaly Compressor (TAC) and is based on data eccentricity. TAC does not require previously established mathematical models or any assumptions about the underlying data distribution. In order to test the effectiveness of the proposed solution and validate it, a comparative analysis was performed on two real-world datasets with two other algorithms from the literature (namely Swing Door Trending (SDT) and the Discrete Cosine Transform (DCT)). It was found that the TAC algorithm showed promising results, achieving a maximum compression rate of 98.33\%. Additionally, it also surpassed the two other models regarding the compression error and peak signal-to-noise ratio in all cases.},
	language = {eng},
	number = {12},
	journal = {Sensors (Basel, Switzerland)},
	author = {Signoretti, Gabriel and Silva, Marianne and Andrade, Pedro and Silva, Ivanovitch and Sisinni, Emiliano and Ferrari, Paolo},
	month = jun,
	year = {2021},
	pmid = {34204300},
	pmcid = {PMC8235329},
	keywords = {eccentricity, evolving algorithm, internet of things, LPWAN, online data compression, TinyML},
	pages = {4153},
	file = {Full Text:/Users/I747320/Zotero/storage/9U4IYDS8/Signoretti et al. - 2021 - An Evolving TinyML Compression Algorithm for IoT Environments Based on Data Eccentricity.pdf:application/pdf},
}

@inproceedings{tsoukas_review_2022,
	address = {New York, NY, USA},
	series = {{PCI} '21},
	title = {A {Review} of {Machine} {Learning} and {TinyML} in {Healthcare}},
	isbn = {978-1-4503-9555-7},
	url = {https://dl.acm.org/doi/10.1145/3503823.3503836},
	doi = {10.1145/3503823.3503836},
	abstract = {Healthcare is the field that can benefit from the large amount of raw data generated from portable and wearable devices. This data must be sent to the Cloud for processing due to the computationally intensive nature of current state-of-the-art implementations of Neural Networks. The emerging technology of TinyML is an alternative approach proposed by the scientific community to create autonomous and safe devices that can collect, process, and alert without transmitting data to external entities. This work is the review of the contribution of the emerging technology of TinyML in healthcare applications at the edge, requiring the integration of Machine Learning algorithms, followed by the solutions it can bring, especially in wearable devices. Moreover, it is discussed how TinyML can optimize Neural Networks to bring intelligence and autonomy in devices used in fields such as healthcare.},
	urldate = {2024-10-21},
	booktitle = {Proceedings of the 25th {Pan}-{Hellenic} {Conference} on {Informatics}},
	publisher = {Association for Computing Machinery},
	author = {Tsoukas, Vasileios and Boumpa, Eleni and Giannakas, Georgios and Kakarountas, Athanasios},
	month = feb,
	year = {2022},
	pages = {69--73},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/44IB5IET/Tsoukas et al. - 2022 - A Review of Machine Learning and TinyML in Healthcare.pdf:application/pdf},
}

@inproceedings{nicolas_tinyml_2022,
	title = {{TinyML} {Smart} {Sensor} for {Energy} {Saving} in {Internet} of {Things} {Precision} {Agriculture} platform},
	url = {https://ieeexplore.ieee.org/abstract/document/9829675},
	doi = {10.1109/ICUFN55119.2022.9829675},
	abstract = {Smart agriculture researchers bring numerous tools and prospects to the farm ecosystem to improve its productivity and, mainly, its sustainability. Artificial Intelligence (AI) is widely used in precision agriculture as Internet of Things (IoT) technologies have brought a huge volume of data to exploit to provide useful insights for farmers such as weather prediction, pest development detection, or harvest time estimation. AI algorithms are mostly executed in the cloud due to their inherent computing constraints, thus requiring the different sensors to offload their data to the appropriate server. Depending on the amount and volume of data exchanged, the need for computer offloading may induce privacy, security, and latency issues in addition to weighting on the sensor’s battery consumption as wireless transmission methods have a high-energy demand. To overcome this difficulty, recent research has tried to bring AI computation closer to the end device with edge or fog computing and more recently with the Tiny Machine Learning (TinyML) paradigm that aims to embed the AI algorithm directly into the sensor’s microcontroller. In that context, this paper proposes a prototype of smart sensor capable of detecting fruits presence with TinyML. We then study the energy consumption of our system in different IoT scenarios.},
	urldate = {2024-10-21},
	booktitle = {2022 {Thirteenth} {International} {Conference} on {Ubiquitous} and {Future} {Networks} ({ICUFN})},
	author = {Nicolas, Chollet and Naila, Bouchemal and Amar, Ramdane-Cherif},
	month = jul,
	year = {2022},
	note = {ISSN: 2165-8536},
	keywords = {Agriculture, AI (Artificial Intelligence), Cloud computing, Computational modeling, IoT (Internet of Things), LoRaWAN, Microcontrollers, Smart agriculture, Smart Farming, TinyML, Weather forecasting, Wireless communication, Wireless sensor networks},
	pages = {256--259},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/CJFCXEDL/Nicolas et al. - 2022 - TinyML Smart Sensor for Energy Saving in Internet of Things Precision Agriculture platform.pdf:application/pdf},
}

@article{merenda_edge_2020,
	title = {Edge {Machine} {Learning} for {AI}-{Enabled} {IoT} {Devices}: {A} {Review}},
	volume = {20},
	shorttitle = {Edge {Machine} {Learning} for {AI}-{Enabled} {IoT} {Devices}},
	doi = {10.3390/s20092533},
	abstract = {In a few years, the world will be populated by billions of connected devices that will be placed in our homes, cities, vehicles, and industries. Devices with limited resources will interact with the surrounding environment and users. Many of these devices will be based on machine learning models to decode meaning and behavior behind sensors’ data, to implement accurate predictions and make decisions. The bottleneck will be the high level of connected things that could congest the network. Hence, the need to incorporate intelligence on end devices using machine learning algorithms. Deploying machine learning on such edge devices improves the network congestion by allowing computations to be performed close to the data sources. The aim of this work is to provide a review of the main techniques that guarantee the execution of machine learning models on hardware with low performances in the Internet of Things paradigm, paving the way to the Internet of Conscious Things. In this work, a detailed review on models, architecture, and requirements on solutions that implement edge machine learning on Internet of Things devices is presented, with the main goal to define the state of the art and envisioning development requirements. Furthermore, an example of edge machine learning implementation on a microcontroller will be provided, commonly regarded as the machine learning “Hello World”.},
	journal = {Sensors},
	author = {Merenda, Massimo and Porcaro, Carlo and Iero, Demetrio},
	month = apr,
	year = {2020},
	pages = {2533},
	file = {Full Text:/Users/I747320/Zotero/storage/2PUCJCQB/Merenda et al. - 2020 - Edge Machine Learning for AI-Enabled IoT Devices A Review.pdf:application/pdf},
}

@article{ray_review_2022,
	title = {A review on {TinyML}: {State}-of-the-art and prospects},
	volume = {34},
	issn = {1319-1578},
	shorttitle = {A review on {TinyML}},
	url = {https://www.sciencedirect.com/science/article/pii/S1319157821003335},
	doi = {10.1016/j.jksuci.2021.11.019},
	abstract = {Machine learning has become an indispensable part of the existing technological domain. Edge computing and Internet of Things (IoT) together presents a new opportunity to imply machine learning techniques at the resource constrained embedded devices at the edge of the network. Conventional machine learning requires enormous amount of power to predict a scenario. Embedded machine learning – TinyML paradigm aims to shift such plethora from traditional high-end systems to low-end clients. Several challenges are paved while doing such transition such as, maintaining the accuracy of learning models, provide train-to-deploy facility in resource frugal tiny edge devices, optimizing processing capacity, and improving reliability. In this paper, we present an intuitive review about such possibilities for TinyML. We firstly, present background of TinyML. Secondly, we list the tool sets for supporting TinyML. Thirdly, we present key enablers for improvement of TinyML systems. Fourthly, we present state-of-the-art about frameworks for TinyML. Finally, we identify key challenges and prescribe a future roadmap for mitigating several research issues of TinyML.},
	number = {4},
	urldate = {2024-10-21},
	journal = {Journal of King Saud University - Computer and Information Sciences},
	author = {Ray, Partha Pratim},
	month = apr,
	year = {2022},
	keywords = {Edge intelligence, Embedded AI, Energy efficient AI, IoT, Resource constrained intelligence, TinyML},
	pages = {1595--1623},
	file = {ScienceDirect Snapshot:/Users/I747320/Zotero/storage/VGY2L66H/S1319157821003335.html:text/html},
}

@article{elhanashi_advancements_2024,
	title = {Advancements in {TinyML}: {Applications}, {Limitations}, and {Impact} on {IoT} {Devices}},
	volume = {13},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2079-9292},
	shorttitle = {Advancements in {TinyML}},
	url = {https://www.mdpi.com/2079-9292/13/17/3562},
	doi = {10.3390/electronics13173562},
	abstract = {Artificial Intelligence (AI) and Machine Learning (ML) have experienced rapid growth in both industry and academia. However, the current ML and AI models demand significant computing and processing power to achieve desired accuracy and results, often restricting their use to high-capability devices. With advancements in embedded system technology and the substantial development in the Internet of Things (IoT) industry, there is a growing desire to integrate ML techniques into resource-constrained embedded systems for ubiquitous intelligence. This aspiration has led to the emergence of TinyML, a specialized approach that enables the deployment of ML models on resource-constrained, power-efficient, and low-cost devices. Despite its potential, the implementation of ML on such devices presents challenges, including optimization, processing capacity, reliability, and maintenance. This article delves into the TinyML model, exploring its background, the tools that support it, and its applications in advanced technologies. By understanding these aspects, we can better appreciate how TinyML is transforming the landscape of AI and ML in embedded and IoT systems.},
	language = {en},
	number = {17},
	urldate = {2024-10-21},
	journal = {Electronics},
	author = {Elhanashi, Abdussalam and Dini, Pierpaolo and Saponara, Sergio and Zheng, Qinghe},
	month = jan,
	year = {2024},
	note = {Number: 17
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {embedded systems, internet of things (IoT), Machine Learning optimization, resource-constrained devices, TinyML},
	pages = {3562},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/EN78UUP5/Elhanashi et al. - 2024 - Advancements in TinyML Applications, Limitations, and Impact on IoT Devices.pdf:application/pdf},
}

@incollection{ahmed_chapter_2024,
	title = {Chapter 18 - {TinyML} network applications for smart cities},
	isbn = {978-0-443-22202-3},
	url = {https://www.sciencedirect.com/science/article/pii/B9780443222023000233},
	abstract = {As smart cities continue to evolve, the amount of data generated by sensors and devices has grown exponentially, making it challenging to analyze and process these data in real time. TinyML offers a solution to this problem by enabling on-device machine learning that can analyze and process data locally, reducing latency and improving security. By leveraging TinyML, smart city applications can become more efficient, sustainable, and effective in improving the quality of life for citizens. In this chapter, we explore the potential of TinyML in enhancing various smart city domains, such as traffic management, energy efficiency, predictive maintenance, and environmental applications. We also highlight real-world examples of TinyML applications in smart cities and the benefits they have provided. Moreover, we discuss the challenges that need to be addressed when implementing TinyML in smart cities and the potential of emerging technologies that may impact the use of TinyML in the future. By the end of this chapter, readers will have a better understanding of the potential of TinyML in enhancing smart cities and improving the quality of life for citizens.},
	urldate = {2024-10-21},
	booktitle = {{TinyML} for {Edge} {Intelligence} in {IoT} and {LPWAN} {Networks}},
	publisher = {Academic Press},
	author = {Ahmed, Zeinab E. and Hashim, Aisha A. and Saeed, Rashid A. and Saeed, Mamoon M.},
	editor = {Chaudhari, Bharat S. and Ghorpade, Sheetal N. and Zennaro, Marco and Paškauskas, Rytis},
	month = jan,
	year = {2024},
	doi = {10.1016/B978-0-44-322202-3.00023-3},
	keywords = {efficiency, machine learning, smart cities, sustainability, TinyML},
	pages = {423--451},
	file = {ScienceDirect Snapshot:/Users/I747320/Zotero/storage/N33GCTAL/B9780443222023000233.html:text/html},
}

@inproceedings{oufettoul_tinyml_2024,
	title = {{TinyML} {Applications}, {Research} {Challenges}, and {Future} {Research} {Directions}},
	url = {https://ieeexplore.ieee.org/document/10469633},
	doi = {10.1109/LT60077.2024.10469633},
	abstract = {In recent times, both the academic and industrial sectors have developed a greater interest in artificial intelligence (AI) and machine learning (ML). Conventional ML approaches usually need significant computational resources to attain the intended level of precision, thereby restricting their feasibility to high-capacity hardware including network nodes. A paradigm shift has occurred with the emergence of Tiny Machine Learning (TinyML), enabling ML tasks to be run on Internet of Things (IoT) hardware with severe limitations. The TinyML paradigm advocates the integration of ML-based processes into small devices powered by microcontroller units (MCUs). This article begins with an introduction to TinyML and then explains the tools that support it. We provide up-to-date information about TinyML frameworks. Subsequently, the most recent TinyML apps that use cutting-edge technology are discussed. Finally, several research problems and potential future directions are noted.},
	urldate = {2024-10-21},
	booktitle = {2024 21st {Learning} and {Technology} {Conference} ({L}\&{T})},
	author = {Oufettoul, Hicham and Chaibi, Redouane and Motahhir, Saad},
	month = jan,
	year = {2024},
	keywords = {Application software, artificial intelligence, Hardware, Internet of Things, IoT, machine learning, microcontroller, Microcontrollers, Task analysis, TinyML},
	pages = {86--91},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/D84P5IT5/Oufettoul et al. - 2024 - TinyML Applications, Research Challenges, and Future Research Directions.pdf:application/pdf;IEEE Xplore Abstract Record:/Users/I747320/Zotero/storage/B53HKITK/10469633.html:text/html},
}

@article{abadade_comprehensive_2023,
	title = {A {Comprehensive} {Survey} on {TinyML}},
	volume = {11},
	issn = {2169-3536},
	url = {https://ieeexplore.ieee.org/document/10177729/?arnumber=10177729},
	doi = {10.1109/ACCESS.2023.3294111},
	abstract = {Recent spectacular progress in computational technologies has led to an unprecedented boom in the field of Artificial Intelligence (AI). AI is now used in a plethora of research areas and has demonstrated its capability to bring new approaches and solutions to various research problems. However, the extensive computation required to train AI algorithms comes with a cost. Driven by the need to reduce the energy consumption, the carbon footprint and the cost of computers running machine learning algorithms, TinyML is nowadays considered as a promising AI alternative focusing on technologies and applications for extremely low-profile devices. This paper presents the results of a literature survey of all TinyML applications and related research efforts. Our survey builds a taxonomy of TinyML techniques that have been used so far to bring new solutions to various domains, such as healthcare, smart farming, environment, and anomaly detection. Finally, this survey highlights the remaining challenges and points out possible future research directions. We anticipate that this survey will motivate further discussions on the various fields of applications of TinyML and the synergy of resource-constrained devices and edge intelligence.},
	urldate = {2024-10-21},
	journal = {IEEE Access},
	author = {Abadade, Youssef and Temouden, Anas and Bamoumen, Hatim and Benamar, Nabil and Chtouki, Yousra and Hafid, Abdelhakim Senhaji},
	year = {2023},
	note = {Conference Name: IEEE Access},
	keywords = {Anomaly detection, Costs, deep learning, edge intelligence, embedded machine learning, Hardware, Internet of Things, Medical services, Smart agriculture, Surveys, TinyML},
	pages = {96892--96922},
	file = {Full Text PDF:/Users/I747320/Zotero/storage/QI64XI8L/Abadade et al. - 2023 - A Comprehensive Survey on TinyML.pdf:application/pdf;IEEE Xplore Abstract Record:/Users/I747320/Zotero/storage/CKN9DF5S/10177729.html:text/html},
}





@article{noauthor_microcontroller_nodate,
	title = {Microcontroller {Market} {Size}, {Share} \& {Trends} {By} 2034},
	url = {https://www.factmr.com/report/4556/microcontroller-market},
	abstract = {Microcontroller market is worth US\$ 25.29 billion in 2023. The United States market is anticipated to garner US\$ 17.76 billion by 2033.},
	language = {en},
	urldate = {2024-10-24},
	file = {Snapshot:/Users/I747320/Zotero/storage/YCCFZ8BU/microcontroller-market.html:text/html},
}



@article{ren_tinyol_2021,
	title = {{TinyOL}: {TinyML} with {Online}-{Learning} on {Microcontrollers}},
	shorttitle = {{TinyOL}},
	url = {http://arxiv.org/abs/2103.08295},
	doi = {10.48550/arXiv.2103.08295},
	abstract = {Tiny machine learning (TinyML) is a fast-growing research area committed to democratizing deep learning for all-pervasive microcontrollers (MCUs). Challenged by the constraints on power, memory, and computation, TinyML has achieved significant advancement in the last few years. However, the current TinyML solutions are based on batch/offline settings and support only the neural network's inference on MCUs. The neural network is first trained using a large amount of pre-collected data on a powerful machine and then flashed to MCUs. This results in a static model, hard to adapt to new data, and impossible to adjust for different scenarios, which impedes the flexibility of the Internet of Things (IoT). To address these problems, we propose a novel system called TinyOL (TinyML with Online-Learning), which enables incremental on-device training on streaming data. TinyOL is based on the concept of online learning and is suitable for constrained IoT devices. We experiment TinyOL under supervised and unsupervised setups using an autoencoder neural network. Finally, we report the performance of the proposed solution and show its effectiveness and feasibility.},
	urldate = {2024-10-24},
	publisher = {arXiv},
	author = {Ren, Haoyu and Anicic, Darko and Runkler, Thomas},
	month = apr,
	year = {2021},
	note = {arXiv:2103.08295},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning, Computer Science - Systems and Control, Electrical Engineering and Systems Science - Systems and Control},
	file = {Preprint PDF:/Users/I747320/Zotero/storage/W7FU58SI/Ren et al. - 2021 - TinyOL TinyML with Online-Learning on Microcontrollers.pdf:application/pdf;Snapshot:/Users/I747320/Zotero/storage/YWYQ53M9/2103.html:text/html},
}



@article{grandviewresearch_research_2023,
	title = {Microcontroller Market research, 2030},
	url = {https://www.grandviewresearch.com/industry-analysis/microcontroller-market?t},
	abstract = {The global microcontroller market size was valued at USD 20.61 billion in 2022 and is expected to grow at a CAGR of 11.7\% from 2024 to 2030},
	language = {en},
	urldate = {2024-10-25},
	file = {Snapshot:/Users/I747320/Zotero/storage/WZ9P8ZGL/microcontroller-market.html:text/html},
}
